---
- name: Infrastructure as Code - VPS provisioning with Ansible on Hetzner Cloud
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars/main.yml
  pre_tasks:
    - name: Prepare | Get public IP
      tags: firewall
      register: public_ip
      ansible.builtin.uri:
        url: https://api.ipify.org
        body_format: json
        body:
          format: json
        return_content: true

    - name: Prepare | Local SSH key
      tags: ssh_key
      community.crypto.openssh_keypair:
        path: ~/.ssh/id_rsa_demo
        state: present
  tasks:
    - name: Create | Hetzner Cloud SSH Key
      tags: ssh_key
      register: hetzner_cloud_ssh_key
      hetzner.hcloud.ssh_key:
        api_token: "{{ hetzner_cloud_api_token }}"
        name: demo-ssh-key
        public_key: "{{ lookup('file', '~/.ssh/id_rsa_demo.pub') }}"
        state: present

    - name: Create | Hetzner Cloud Firewall
      register: hetzner_cloud_firewall
      tags: firewall
      hetzner.hcloud.firewall:
        api_token: "{{ hetzner_cloud_api_token }}"
        name: demo-firewall
        rules:
          - description: Allow SSH from demo public IP
            direction: in
            port: "22"
            protocol: tcp
            source_ips:
              - "{{ public_ip.content }}/32"
          - description: Allow HTTP from demo public IP
            direction: in
            port: "80"
            protocol: tcp
            source_ips:
              - "{{ public_ip.content }}/32"
        state: present

    - name: Create | Hetzner Cloud Servers
      tags: server
      loop: "{{ hetzner_cloud_servers }}"
      hetzner.hcloud.server:
        api_token: "{{ hetzner_cloud_api_token }}"
        name: "{{ item.name }}"
        server_type: "{{ item.server_type }}"
        image: "{{ item.image }}"
        location: "{{ item.location }}"
        labels: "{{ item.labels }}"
        ssh_keys:
          - "{{ hetzner_cloud_ssh_key.hcloud_ssh_key.name }}"
        firewalls:
          - "{{ hetzner_cloud_firewall.hcloud_firewall.name }}"
        state: "{{ item.state | default('started') }}"
